
serve:
  proxy:
    port: {{ oath_proxy_port }}
  api:
    port: {{ oath_api_port }}

log:
  leak_sensitive_values: true
  format: text
  level: debug

access_rules:
  repositories:
    - file://{{ oath_install_path }}/conf/rules.json

errors:
  fallback:
    - json
  handlers:
    json:
      enabled: true
      config:
        verbose: true
    redirect:
      enabled: {{ oath_redirect_enabled }}
      config:
        to: {{ oath_redirect_url }}

mutators:
  # header:
  #  enabled: false
  #  config:
   #   headers:
    #    X-User: "{% raw %}{{ print .Subject }}{% endraw %}"
        # You could add some other headers, for example with data from the
        # session.
        # X-Some-Arbitrary-Data: "{% raw %}{{ print .Extra.some.arbitrary.data }}{% endraw %}"
  noop:
    enabled: {{ oath_noop_enabled }}

authorizers:
  allow:
    enabled: true
  deny:
    enabled: true

authenticators:
  anonymous:
    enabled: true
    config:
      subject: guest
  oauth2_client_credentials:
    enabled: true
    config:
      token_url: http://10.21.34.2:8080/auth/realms/ElasticSearch/protocol/openid-connect/token
  oauth2_introspection:
    enabled: true
    config:
      introspection_url: http://10.21.34.2:8080/auth/realms/ElasticSearch/protocol/openid-connect/token/introspect
      scope_strategy: exact
      target_audience:
        - es_client
      required_scope:
        - introspect
      pre_authorization:
        enabled: false
        client_id: es-client
        client_secret: be8c08ff-aa92-4585-aadf-f2d20f79de87
        scope:
          - introspect
        token_url: http://10.21.34.2:8080/auth/realms/ElasticSearch/protocol/openid-connect/token
      introspection_request_headers:
        x-forwarded-proto: http
        Authorization: Basic ZXMtY2xpZW50OmJlOGMwOGZmLWFhOTItNDU4NS1hYWRmLWYyZDIwZjc5ZGU4Nw==
      token_from:
        header: Authorization
      cache:
        enabled: true
        ttl: 120s

